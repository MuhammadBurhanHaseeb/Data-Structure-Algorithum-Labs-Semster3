/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool findTarget(TreeNode* root, int k) {
       
                
        stack<TreeNode*> stack;
        TreeNode* curr = root;
        vector<int> v;
        while (!stack.empty() || curr != NULL)
        {
            if (curr != NULL)
            {
                stack.push(curr);
                curr = curr->left;
            }
            else
            {
                curr = stack.top();
                stack.pop();
                v.push_back(curr->val);
                curr = curr->right;
            }
        }
        int i = 0;
        while(i < v.size())
        {
            for(int x = i; x < v.size(); x++)
            {
                if(i != x)
                {
                    if(v[x] + v[i] == k)
                    {
                        return true;
                    }
                }
            } 
            i++;
        }
        return false;   
    }
};