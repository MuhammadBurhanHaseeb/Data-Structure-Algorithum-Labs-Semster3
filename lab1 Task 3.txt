/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        
        queue<TreeNode*> q;
        vector<vector<int>> Vector1;
        q.push(root);
        vector<int> Vector2;
        if (root != NULL)
        {
             while(!q.empty())
             {  
                int len = q.size();
                for (int x = 0; x < len; x++)
                {
                    TreeNode* p = q.front();
                    q.pop();
                    Vector2.push_back(p->val);
                    if (p->left != NULL)
                    {
                        q.push(p->left);
                    }
                    if (p->right != NULL)
                    {
                        q.push(p->right);
                    } 
                }
                Vector1.push_back(Vector2);
                Vector2.clear();
             }  
        }
       
        return Vector1;
    }
};