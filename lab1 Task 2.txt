/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        
        queue<TreeNode*> q;
        q.push(root);
        int sum = 0;
        while(!q.empty())
        {
            TreeNode* p = q.front();
            q.pop();
            if(p->left != NULL)
            {
                if(p->left->left == NULL && p->left->right == NULL)
                {
                    sum = sum + p->left->val;
                }
                else
                {
                    q.push(p->left);
                }
            }
            if(p->right != NULL)
            {
                if(p->right->left == NULL && p->right->right == NULL)
                {
                    sum = sum + 0;
                }
                else
                {
                    q.push(p->right);
                }
            }   
        }
        return sum;
    }
};