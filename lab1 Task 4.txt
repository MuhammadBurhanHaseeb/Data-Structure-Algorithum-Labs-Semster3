/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        
        queue<TreeNode*> q;
        vector<double> avg;
        vector<int> v;
        q.push(root);
        while(!q.empty())
        {
            int len = q.size();
            for(int x = 0; x < len; x++)
            {
                TreeNode* p = q.front();
                q.pop();
                v.push_back(p->val);
                if(p->left != NULL)
                {
                    q.push(p->left);
                }
                if(p->right != NULL)
                {
                    q.push(p->right);
                }    
            } 
            double sum = 0;
            for(int x = 0; x < v.size(); x++)
            {
                sum = sum + v[x];
            }
            sum = sum/v.size();
            avg.push_back(sum);
            v.clear();
        }
        return avg;
    }
};