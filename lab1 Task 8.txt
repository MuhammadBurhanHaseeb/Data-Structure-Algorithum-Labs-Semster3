/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        
        queue<TreeNode*> q;
        q.push(root);
        vector<int> v1;
        vector<int> v2;
        int largest;
        if(root != NULL)
        {
           while(!q.empty())
            {
                int len = q.size();
                for(int x = 0; x < len; x++)
                {
                    TreeNode* p = q.front();
                    q.pop();
                    v1.push_back(p->val);
                    if(p->left != NULL)
                    {
                        q.push(p->left);
                    }
                    if(p->right != NULL)
                    {
                        q.push(p->right);
                    }
                }
                largest = v1[0];
                for(int x = 0; x < v1.size(); x++)
                {
                    if(v1[x] > largest)
                    {
                        largest = v1[x];
                    }
                }
                v2.push_back(largest);
                v1.clear();
            } 
        }
        return v2;
    }
};